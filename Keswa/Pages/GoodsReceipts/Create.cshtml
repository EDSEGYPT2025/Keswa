@page
@model Keswa.Pages.GoodsReceipts.CreateModel
@{
    ViewData["Title"] = "إنشاء سند استلام جديد";
}

<!-- Page Header -->
<div class="mb-4">
    <h1 class="h2 fw-bold">@ViewData["Title"]</h1>
    <p class="text-muted">أدخل بيانات السند والأصناف المستلمة.</p>
</div>

<form method="post">
    <!-- Main Document Info -->
    <div class="card shadow-sm border-0 mb-4">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-3">
                    <label asp-for="GoodsReceiptNote.TransactionType" class="form-label"></label>
                    <select asp-for="GoodsReceiptNote.TransactionType" class="form-select" asp-items="Html.GetEnumSelectList<Keswa.Enums.TransactionType>()"></select>
                    <span asp-validation-for="GoodsReceiptNote.TransactionType" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                    <label asp-for="GoodsReceiptNote.WarehouseId" class="form-label"></label>
                    <select asp-for="GoodsReceiptNote.WarehouseId" class="form-select searchable-select" asp-items="Model.WarehouseList">
                        <option value="">-- اختر المخزن --</option>
                    </select>
                    <span asp-validation-for="GoodsReceiptNote.WarehouseId" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                    <label asp-for="GoodsReceiptNote.ReceiptDate" class="form-label"></label>
                    <input asp-for="GoodsReceiptNote.ReceiptDate" class="form-control" type="date" />
                    <span asp-validation-for="GoodsReceiptNote.ReceiptDate" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                    <label asp-for="GoodsReceiptNote.DocumentNumber" class="form-label"></label>
                    <input asp-for="GoodsReceiptNote.DocumentNumber" class="form-control" />
                    <span asp-validation-for="GoodsReceiptNote.DocumentNumber" class="text-danger"></span>
                </div>
            </div>
        </div>
    </div>

    <!-- Document Details -->
    <div class="card shadow-sm border-0">
        <div class="card-header bg-transparent d-flex justify-content-between align-items-center">
            <h5 class="fw-bold mb-0">تفاصيل الأصناف</h5>
            <button type="button" id="add-item-btn" class="btn btn-sm btn-outline-success"><i class="bi bi-plus-circle me-2"></i>إضافة صنف</button>
        </div>
        <div class="card-body">
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger" asp-validation-summary="ModelOnly"></div>
            }
            <table class="table">
                <thead class="table-light">
                    <tr>
                        <th style="width: 30%;">المادة الخام</th>
                        <th style="width: 20%;">اللون</th>
                        <th style="width: 15%;">الكمية</th>
                        <th style="width: 15%;">سعر الوحدة</th>
                        <th style="width: 10%;">الإجمالي</th>
                        <th style="width: 10%;"></th>
                    </tr>
                </thead>
                <tbody id="items-container">
                    <!-- الصفوف الديناميكية ستضاف هنا -->
                </tbody>
            </table>
        </div>
    </div>

    <hr class="my-4" />
    <div class="d-flex justify-content-end">
        <a asp-page="Index" class="btn btn-outline-secondary me-2">إلغاء</a>
        <button type="submit" class="btn btn-primary">حفظ السند</button>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            const materialsData = JSON.parse('@Html.Raw(Model.MaterialsJson)');
            const baseMaterialOptions = @Html.Raw(Json.Serialize(Model.BaseMaterialList.Select(p => new { value = p.Text, text = p.Text })));
            let itemIndex = 0;

            function reindexRows() {
                $('#items-container tr').each(function(index) {
                    $(this).find('input, select').each(function() {
                        if (this.name) {
                            this.name = this.name.replace(/\[\d+\]/, '[' + index + ']');
                        }
                    });
                });
                itemIndex = $('#items-container tr').length;
            }

            function initializeSelect2(element) {
                $(element).select2({ theme: "bootstrap-5", dir: "rtl", placeholder: '-- اختر --', width: '100%' });
            }

            $('#add-item-btn').click(function() {
                const newRow = $('<tr>').attr('id', `row-${itemIndex}`);

                // --- خلايا الجدول ---
                const cellMaterial = $('<td>');
                const cellColor = $('<td>');
                const cellQuantity = $('<td><input type="number" name="GoodsReceiptNote.Details[' + itemIndex + '].Quantity" class="form-control item-quantity" value="1" min="0.01" step="any" /></td>');
                const cellPrice = $('<td><input type="number" name="GoodsReceiptNote.Details[' + itemIndex + '].UnitPrice" class="form-control item-price" value="0" min="0.01" step="any" /></td>');
                const cellTotal = $('<td><span class="item-total fw-bold">0.00</span></td>');
                const cellRemove = $('<td><button type="button" class="btn btn-sm btn-outline-danger remove-item-btn"><i class="bi bi-trash"></i></button></td>');

                // --- إنشاء القوائم المنسدلة ---
                const hiddenInput = $('<input>').attr({ type: 'hidden', name: `GoodsReceiptNote.Details[${itemIndex}].MaterialId`, class: 'final-material-id'});
                const materialSelect = $('<select>').addClass('form-select base-material-select searchable-select');
                const colorSelect = $('<select>').addClass('form-select color-select').prop('disabled', true);

                // تعبئة قائمة المواد الأساسية
                materialSelect.append($('<option>', { value: '', text: '-- اختر المادة --' }));
                baseMaterialOptions.forEach(opt => materialSelect.append($('<option>', { value: opt.value, text: opt.text })));

                colorSelect.append($('<option>', { value: '', text: '-- اختر اللون --' }));

                cellMaterial.append(materialSelect).append(hiddenInput);
                cellColor.append(colorSelect);

                newRow.append(cellMaterial, cellColor, cellQuantity, cellPrice, cellTotal, cellRemove);
                $('#items-container').append(newRow);

                initializeSelect2(newRow.find('.searchable-select'));
                reindexRows();
            });

            // --- المنطق الديناميكي للقوائم المنسدلة ---
            $('#items-container').on('change', '.base-material-select', function() {
                const selectedMaterialName = $(this).val();
                const row = $(this).closest('tr');
                const colorSelect = row.find('.color-select');
                const hiddenInput = row.find('.final-material-id');

                colorSelect.empty().append($('<option>', { value: '', text: '-- اختر اللون --' })).prop('disabled', true);
                hiddenInput.val('');

                if (selectedMaterialName && materialsData[selectedMaterialName]) {
                    const colors = materialsData[selectedMaterialName];
                    if (colors.length > 0) {
                        colors.forEach(color => colorSelect.append($('<option>', { value: color.id, text: color.color })));
                        colorSelect.prop('disabled', false);

                        // إذا كان هناك لون واحد فقط، اختره تلقائياً
                        if (colors.length === 1) {
                            colorSelect.val(colors[0].id).trigger('change');
                        }
                    }
                }
            });

            $('#items-container').on('change', '.color-select', function() {
                const selectedMaterialId = $(this).val();
                const row = $(this).closest('tr');
                const hiddenInput = row.find('.final-material-id');
                hiddenInput.val(selectedMaterialId);
            });

            // --- باقي الوظائف ---
             $('#items-container').on('click', '.remove-item-btn', function () {
                $(this).closest('tr').find('.searchable-select').each(function() {
                    if ($(this).data('select2')) $(this).select2('destroy');
                });
                $(this).closest('tr').remove();
                reindexRows();
            });

            $('#items-container').on('input', '.item-quantity, .item-price', function () {
                let row = $(this).closest('tr');
                let quantity = parseFloat(row.find('.item-quantity').val()) || 0;
                let price = parseFloat(row.find('.item-price').val()) || 0;
                row.find('.item-total').text((quantity * price).toFixed(2));
            });
        });
    </script>
}
